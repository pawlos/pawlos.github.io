"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkcreate_wasm_app"] = self["webpackChunkcreate_wasm_app"] || []).push([["index_js"],{

/***/ "../pkg/water_sort.js":
/*!****************************!*\
  !*** ../pkg/water_sort.js ***!
  \****************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bottle: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.Bottle),\n/* harmony export */   Color: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.Color),\n/* harmony export */   Pour: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.Pour),\n/* harmony export */   WaterSolver: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.WaterSolver),\n/* harmony export */   WaterSorting: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.WaterSorting),\n/* harmony export */   __wbg_pour_new: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_pour_new),\n/* harmony export */   __wbg_set_wasm: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_throw: () => (/* reexport safe */ _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbindgen_throw)\n/* harmony export */ });\n/* harmony import */ var _water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./water_sort_bg.wasm */ \"../pkg/water_sort_bg.wasm\");\n/* harmony import */ var _water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./water_sort_bg.js */ \"../pkg/water_sort_bg.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n(0,_water_sort_bg_js__WEBPACK_IMPORTED_MODULE_0__.__wbg_set_wasm)(_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__);\n_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.__wbindgen_start();\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/../pkg/water_sort.js?");

/***/ }),

/***/ "../pkg/water_sort_bg.js":
/*!*******************************!*\
  !*** ../pkg/water_sort_bg.js ***!
  \*******************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Bottle: () => (/* binding */ Bottle),\n/* harmony export */   Color: () => (/* binding */ Color),\n/* harmony export */   Pour: () => (/* binding */ Pour),\n/* harmony export */   WaterSolver: () => (/* binding */ WaterSolver),\n/* harmony export */   WaterSorting: () => (/* binding */ WaterSorting),\n/* harmony export */   __wbg_pour_new: () => (/* binding */ __wbg_pour_new),\n/* harmony export */   __wbg_set_wasm: () => (/* binding */ __wbg_set_wasm),\n/* harmony export */   __wbindgen_init_externref_table: () => (/* binding */ __wbindgen_init_externref_table),\n/* harmony export */   __wbindgen_throw: () => (/* binding */ __wbindgen_throw)\n/* harmony export */ });\nlet wasm;\nfunction __wbg_set_wasm(val) {\n    wasm = val;\n}\n\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8ArrayMemory0 = null;\n\nfunction getUint8ArrayMemory0() {\n    if (cachedUint8ArrayMemory0 === null || cachedUint8ArrayMemory0.byteLength === 0) {\n        cachedUint8ArrayMemory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8ArrayMemory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8ArrayMemory0().subarray(ptr, ptr + len));\n}\n\nfunction _assertClass(instance, klass) {\n    if (!(instance instanceof klass)) {\n        throw new Error(`expected instance of ${klass.name}`);\n    }\n}\n\nlet cachedDataViewMemory0 = null;\n\nfunction getDataViewMemory0() {\n    if (cachedDataViewMemory0 === null || cachedDataViewMemory0.buffer.detached === true || (cachedDataViewMemory0.buffer.detached === undefined && cachedDataViewMemory0.buffer !== wasm.memory.buffer)) {\n        cachedDataViewMemory0 = new DataView(wasm.memory.buffer);\n    }\n    return cachedDataViewMemory0;\n}\n\nfunction getArrayJsValueFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    const mem = getDataViewMemory0();\n    const result = [];\n    for (let i = ptr; i < ptr + 4 * len; i += 4) {\n        result.push(wasm.__wbindgen_export_0.get(mem.getUint32(i, true)));\n    }\n    wasm.__externref_drop_slice(ptr, len);\n    return result;\n}\n/**\n * @enum {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13}\n */\nconst Color = Object.freeze({\n    Empty: 0, \"0\": \"Empty\",\n    Blue: 1, \"1\": \"Blue\",\n    Red: 2, \"2\": \"Red\",\n    Gray: 3, \"3\": \"Gray\",\n    Orange: 4, \"4\": \"Orange\",\n    Brown: 5, \"5\": \"Brown\",\n    Yellow: 6, \"6\": \"Yellow\",\n    Green: 7, \"7\": \"Green\",\n    Magenta: 8, \"8\": \"Magenta\",\n    Teal: 9, \"9\": \"Teal\",\n    Purple: 10, \"10\": \"Purple\",\n    LightBlue: 11, \"11\": \"LightBlue\",\n    Peach: 12, \"12\": \"Peach\",\n    Olive: 13, \"13\": \"Olive\",\n});\n\nconst BottleFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_bottle_free(ptr >>> 0, 1));\n\nclass Bottle {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        BottleFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_bottle_free(ptr, 0);\n    }\n}\n\nconst PourFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_pour_free(ptr >>> 0, 1));\n\nclass Pour {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(Pour.prototype);\n        obj.__wbg_ptr = ptr;\n        PourFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        PourFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_pour_free(ptr, 0);\n    }\n    /**\n     * @returns {number}\n     */\n    get from() {\n        const ret = wasm.__wbg_get_pour_from(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @param {number} arg0\n     */\n    set from(arg0) {\n        wasm.__wbg_set_pour_from(this.__wbg_ptr, arg0);\n    }\n    /**\n     * @returns {number}\n     */\n    get to() {\n        const ret = wasm.__wbg_get_pour_to(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @param {number} arg0\n     */\n    set to(arg0) {\n        wasm.__wbg_set_pour_to(this.__wbg_ptr, arg0);\n    }\n}\n\nconst WaterSolverFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_watersolver_free(ptr >>> 0, 1));\n\nclass WaterSolver {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WaterSolver.prototype);\n        obj.__wbg_ptr = ptr;\n        WaterSolverFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WaterSolverFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_watersolver_free(ptr, 0);\n    }\n    /**\n     * @param {WaterSorting} w\n     * @returns {WaterSolver}\n     */\n    static new(w) {\n        _assertClass(w, WaterSorting);\n        const ret = wasm.watersolver_new(w.__wbg_ptr);\n        return WaterSolver.__wrap(ret);\n    }\n    /**\n     * @param {number} n\n     * @returns {number}\n     */\n    solution(n) {\n        const ret = wasm.watersolver_solution(this.__wbg_ptr, n);\n        return ret >>> 0;\n    }\n    /**\n     * @param {number} n\n     * @returns {Pour[]}\n     */\n    solve(n) {\n        const ret = wasm.watersolver_solve(this.__wbg_ptr, n);\n        var v1 = getArrayJsValueFromWasm0(ret[0], ret[1]).slice();\n        wasm.__wbindgen_free(ret[0], ret[1] * 4, 4);\n        return v1;\n    }\n}\n\nconst WaterSortingFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_watersorting_free(ptr >>> 0, 1));\n\nclass WaterSorting {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(WaterSorting.prototype);\n        obj.__wbg_ptr = ptr;\n        WaterSortingFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WaterSortingFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_watersorting_free(ptr, 0);\n    }\n    /**\n     * @returns {WaterSorting}\n     */\n    static new() {\n        const ret = wasm.watersorting_new();\n        return WaterSorting.__wrap(ret);\n    }\n    /**\n     * @param {number} from_index\n     * @param {number} to_index\n     */\n    pour(from_index, to_index) {\n        wasm.watersorting_pour(this.__wbg_ptr, from_index, to_index);\n    }\n    undo() {\n        wasm.watersorting_undo(this.__wbg_ptr);\n    }\n    /**\n     * @returns {boolean}\n     */\n    undo_available() {\n        const ret = wasm.watersorting_undo_available(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n     * @returns {boolean}\n     */\n    win() {\n        const ret = wasm.watersorting_win(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    init_empty_bottle() {\n        wasm.watersorting_init_empty_bottle(this.__wbg_ptr);\n    }\n    /**\n     * @param {Color} c\n     */\n    init_bottle_with_one_color(c) {\n        wasm.watersorting_init_bottle_with_one_color(this.__wbg_ptr, c);\n    }\n    /**\n     * @param {Color} b\n     * @param {Color} l1\n     */\n    init_bottle_with_two_colors(b, l1) {\n        wasm.watersorting_init_bottle_with_two_colors(this.__wbg_ptr, b, l1);\n    }\n    /**\n     * @param {Color} b\n     * @param {Color} l1\n     * @param {Color} l2\n     */\n    init_bottle_with_three_colors(b, l1, l2) {\n        wasm.watersorting_init_bottle_with_three_colors(this.__wbg_ptr, b, l1, l2);\n    }\n    /**\n     * @param {Color} b\n     * @param {Color} l1\n     * @param {Color} l2\n     * @param {Color} t\n     */\n    init_bottle_with_four_colors(b, l1, l2, t) {\n        wasm.watersorting_init_bottle_with_four_colors(this.__wbg_ptr, b, l1, l2, t);\n    }\n    /**\n     * @returns {boolean}\n     */\n    move_available() {\n        const ret = wasm.watersorting_move_available(this.__wbg_ptr);\n        return ret !== 0;\n    }\n    /**\n     * @returns {number}\n     */\n    bottles() {\n        const ret = wasm.watersorting_bottles(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n     * @returns {number}\n     */\n    bottles_count() {\n        const ret = wasm.watersorting_bottles_count(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    reset() {\n        wasm.watersorting_reset(this.__wbg_ptr);\n    }\n    /**\n     * @returns {string}\n     */\n    render() {\n        let deferred1_0;\n        let deferred1_1;\n        try {\n            const ret = wasm.watersorting_render(this.__wbg_ptr);\n            deferred1_0 = ret[0];\n            deferred1_1 = ret[1];\n            return getStringFromWasm0(ret[0], ret[1]);\n        } finally {\n            wasm.__wbindgen_free(deferred1_0, deferred1_1, 1);\n        }\n    }\n    /**\n     * @returns {boolean}\n     */\n    can_be_sorted() {\n        const ret = wasm.watersorting_can_be_sorted(this.__wbg_ptr);\n        return ret !== 0;\n    }\n}\n\nfunction __wbg_pour_new(arg0) {\n    const ret = Pour.__wrap(arg0);\n    return ret;\n};\n\nfunction __wbindgen_init_externref_table() {\n    const table = wasm.__wbindgen_export_0;\n    const offset = table.grow(4);\n    table.set(0, undefined);\n    table.set(offset + 0, undefined);\n    table.set(offset + 1, null);\n    table.set(offset + 2, true);\n    table.set(offset + 3, false);\n    ;\n};\n\nfunction __wbindgen_throw(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\n\n\n//# sourceURL=webpack://create-wasm-app/../pkg/water_sort_bg.js?");

/***/ }),

/***/ "../pkg/water_sort_bg.wasm":
/*!*********************************!*\
  !*** ../pkg/water_sort_bg.wasm ***!
  \*********************************/
/***/ ((module, exports, __webpack_require__) => {

eval("/* harmony import */ var WEBPACK_IMPORTED_MODULE_0 = __webpack_require__(/*! ./water_sort_bg.js */ \"../pkg/water_sort_bg.js\");\nmodule.exports = __webpack_require__.v(exports, module.id, \"cfbe1d77a726ed2ac2f2\", {\n\t\"./water_sort_bg.js\": {\n\t\t\"__wbg_pour_new\": WEBPACK_IMPORTED_MODULE_0.__wbg_pour_new,\n\t\t\"__wbindgen_throw\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_throw,\n\t\t\"__wbindgen_init_externref_table\": WEBPACK_IMPORTED_MODULE_0.__wbindgen_init_externref_table\n\t}\n});\n\n//# sourceURL=webpack://create-wasm-app/../pkg/water_sort_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! wasm-water-sort */ \"../pkg/water_sort.js\");\n/* harmony import */ var _pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pkg/water_sort_bg.wasm */ \"../pkg/water_sort_bg.wasm\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__, _pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__]);\n([wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__, _pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\r\n\r\n\r\nconst SIZE = 25;\r\nconst SPACE = 10;\r\nconst PADDING = 5;\r\nconst SELECTED_PADDING = -5;\r\nconst EMPTY = '#FFFFFF'\r\nconst BLUE = '#000080';\r\nconst RED = '#fb0606';\r\nconst GRAY = '#808080';\r\nconst ORANGE = '#F08000'\r\nconst BROWN = '#7b2525'\r\nconst YELLOW = '#F0F000'\r\nconst GREEN = '#008000'\r\nconst MAGENTA = '#7f1894'\r\nconst LIME = '#7aa402'\r\nconst TEAL = '#55b08d'\r\nconst PURPLE = '#ab64d4'\r\nconst LIGHTBLUE ='#2688ab'\r\nconst PEACH = '#cb9486'\r\nconst OLIVE = '#194e24'\r\nconst colors = [EMPTY, BLUE, RED, GRAY, ORANGE, BROWN, YELLOW, GREEN, MAGENTA, LIME, TEAL, PURPLE, LIGHTBLUE, PEACH, OLIVE];\r\nconst waterSorting = wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.WaterSorting.new();\r\nconst success = new Audio('success.mp3');\r\n\r\nconst initialize = (w) => {\r\n    w.init_bottle_with_four_colors(wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Red, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Red, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Orange, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Blue);\r\n    w.init_bottle_with_four_colors(wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Peach, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Blue, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Peach, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Orange);\r\n    w.init_bottle_with_four_colors(wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Peach, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Blue, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Red, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Peach);\r\n    w.init_bottle_with_four_colors(wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Orange, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Teal, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Red, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Teal);\r\n    w.init_bottle_with_four_colors(wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Blue, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Teal, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Teal, wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.Color.Orange);\r\n    w.init_empty_bottle();\r\n    w.init_empty_bottle();\r\n};\r\ninitialize(waterSorting);\r\n\r\nconst canvas = document.getElementById('water-sorting-canvas');\r\nconst undo_btn = document.getElementById('undo-btn');\r\nconst reset_btn = document.getElementById('reset-btn');\r\nconst solve_btn = document.getElementById('solve-btn');\r\nconst ctx = canvas.getContext('2d');\r\n\r\nconst bottles_count = waterSorting.bottles_count();\r\ncanvas.width = PADDING+(bottles_count + 1)*(SIZE+SPACE)+SPACE;\r\ncanvas.height = 5*SIZE+SPACE;\r\n\r\nconst selected = [];\r\n\r\nconst positions = [];\r\nfor(let i = 0; i<bottles_count;i++)\r\n{\r\n    let x = PADDING + i * (SIZE+SPACE);\r\n    positions.push({'x1': x,'x2':x+SIZE});\r\n}\r\n\r\nconst getMousePos = (canvas, evt) => {\r\n    const rect = canvas.getBoundingClientRect();\r\n    return {\r\n        x: evt.clientX - rect.left,\r\n        y: evt.clientY - rect.top\r\n    };\r\n}\r\n\r\nconst mouseMove = (ev) => {\r\n    let point = getMousePos(canvas, ev);\r\n    let x = point.x;\r\n    const within = (el) => el.x1 <= x && el.x2 >= x;\r\n    if (positions.some(within))\r\n        canvas.style.cursor = 'pointer';\r\n    else\r\n        canvas.style.cursor = 'default';\r\n}\r\ncanvas.onmousemove = mouseMove;\r\n\r\nlet undo_requested = false;\r\nconst undo = () => {\r\n    undo_requested = true;\r\n}\r\nundo_btn.onclick = undo;\r\n\r\nlet reset_requested = false;\r\nconst reset = () => {\r\n    reset_requested = true;\r\n}\r\nreset_btn.onclick = reset;\r\n\r\nconst perform_move = (moves, index) => {\r\n    if (index < 0 || index >= moves.length) return;\r\n    const move = moves[index];\r\n    const from = move.from;\r\n    const to = move.to;\r\n    waterSorting.pour(from, to);\r\n    setTimeout(perform_move, 1000, moves, ++index);\r\n}\r\n\r\nconst solve = (ws) => {\r\n    const waterSolver = wasm_water_sort__WEBPACK_IMPORTED_MODULE_0__.WaterSolver.new(ws);\r\n    const pours = waterSolver.solution(20);\r\n    const solutions = new Uint8Array(_pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.memory.buffer, pours,  4);\r\n    const count = solutions[0];\r\n    const moves = new Uint8Array(_pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.memory.buffer, pours,\r\n    /* 4 B * 2 position per pour + 1 for count */ 4 * count * 2 + 1);\r\n    let solution_moves = [];\r\n    for (let i = 1; i < count*2; i+=2) {\r\n        solution_moves.push({from: moves[i*4], to: moves[(i+1)*4]});\r\n    }\r\n    setTimeout(perform_move, 100, solution_moves, 0);\r\n}\r\n\r\nsolve_btn.onclick = () => solve(waterSorting);\r\n\r\nconst mouseClick = (ev) => {\r\n    if (waterSorting.win()) return;\r\n    let point = getMousePos(canvas, ev);\r\n    let x = point.x;\r\n    const within = (el) => el.x1 <= x && el.x2 >= x;\r\n    let index = positions.findIndex(within);\r\n    if (index === -1) return;\r\n    if (selected.includes(index))\r\n        selected.splice(0, 1);\r\n    else\r\n        selected[selected.length % 2] = index;\r\n\r\n\r\n}\r\ncanvas.onclick = mouseClick;\r\n\r\nconst drawGame = () => {\r\n    function perform_undo() {\r\n        undo_requested = false;\r\n        selected.splice(0, 2);\r\n        waterSorting.undo();\r\n    }\r\n\r\n    function perform_pouring() {\r\n        waterSorting.pour(selected[0], selected[1]);\r\n        selected.splice(0, 2);\r\n    }\r\n    function perform_reset() {\r\n        reset_requested = false;\r\n        waterSorting.reset();\r\n        initialize(waterSorting);\r\n    }\r\n\r\n    waterSorting.undo_available() ? undo_btn.removeAttribute(\"disabled\") : undo_btn.setAttribute(\"disabled\", \"disabled\");\r\n    clear();\r\n\r\n    if (reset_requested) {\r\n        perform_reset();\r\n    }\r\n\r\n    if (undo_requested) {\r\n        perform_undo();\r\n    }\r\n    else if (selected.length === 2) {\r\n        perform_pouring();\r\n    }\r\n    if (waterSorting.win()) {\r\n        drawWin();\r\n        success.play().then(() => setTimeout(()=>reset_requested = true, 3000));\r\n    } else {\r\n        drawBottles(waterSorting.bottles());\r\n    }\r\n    requestAnimationFrame(drawGame);\r\n}\r\n\r\nconst drawWin = () => {\r\n    ctx.fillStyle = colors[4];\r\n    ctx.font = \"40px serif\"\r\n    const win = \"You win!\";\r\n    const measure = ctx.measureText(win);\r\n    ctx.fillText(win, (canvas.width - measure.width) / 2,canvas.height - 20, measure.width);\r\n}\r\n\r\nconst drawBottles = (bottlesPtr) => {\r\n    const bottles = new Uint8Array(_pkg_water_sort_bg_wasm__WEBPACK_IMPORTED_MODULE_1__.memory.buffer, bottlesPtr, bottles_count * 4);\r\n    for (let i = 0; i < bottles_count; i++) {\r\n        drawBottle(i);\r\n        for (let j = 0; j < 4; j++) {\r\n            drawFluid(i, 4 - j, bottles[i*4+j])\r\n        }\r\n    }\r\n}\r\n\r\nconst clear = () => {\r\n    ctx.fillStyle = colors[0];\r\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n}\r\n\r\nconst drawBottle = (x) => {\r\n    ctx.beginPath();\r\n    ctx.strokeStyle = '#000';\r\n    let padding = selected[0] === x ? SELECTED_PADDING: 0;\r\n    ctx.moveTo(PADDING + x * (SIZE + SPACE)-1, SIZE+1+padding);\r\n    ctx.lineTo(PADDING + x * (SIZE + SPACE)-1, 5*SIZE+1+padding);\r\n    ctx.lineTo(PADDING + x * (SIZE+SPACE)+SIZE+1, 5*SIZE+1+padding);\r\n    ctx.lineTo(PADDING + x * (SIZE+SPACE)+SIZE+1, SIZE+1+padding);\r\n    ctx.stroke();\r\n}\r\n\r\nconst drawFluid = (x, y, c) => {\r\n    ctx.fillStyle = colors[c];\r\n    let padding = selected[0] === x ? SELECTED_PADDING : 0;\r\n\r\n    ctx.fillRect(\r\n        PADDING + x * (SIZE+SPACE),\r\n        y * SIZE + padding,\r\n        SIZE,\r\n        SIZE\r\n    );\r\n}\r\n\r\nrequestAnimationFrame(drawGame);\r\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://create-wasm-app/./index.js?");

/***/ })

}]);